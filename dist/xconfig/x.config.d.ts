import { ConfigService } from '@nestjs/config';
import { z } from 'zod';
declare const zEnvValidationSchema: z.ZodObject<{
    NODE_ENV: z.ZodEnum<["PRODUCTION", "DEVELOPMENT", "LOCAL"]>;
    APP_PORT: z.ZodNumber;
    DATABASE_URL: z.ZodString;
    JWT_SECRET: z.ZodString;
    DEVICE_JWT_SECRET: z.ZodString;
    OBJECT_STORAGE_HOST: z.ZodString;
    OBJECT_STORAGE_PORT: z.ZodString;
    OBJECT_STORAGE_REGION: z.ZodString;
    OBJECT_STORAGE_BUCKET: z.ZodString;
    OBJECT_STORAGE_ACCESS_KEY_ID: z.ZodString;
    OBJECT_STORAGE_SECRET_ACCESS_KEY: z.ZodString;
    OBJECT_STORAGE_FORCE_PATH_STYLE: z.ZodString;
    OBJECT_STORAGE_ENDPOINT: z.ZodString;
    DEFAULT_IMAGE_COMPRESSION_WIDTH: z.ZodNumber;
    DEFAULT_IMAGE_COMPRESSION_HEIGHT: z.ZodNumber;
    OBJECT_STORAGE_PREFIX_USER: z.ZodString;
    OBJECT_STORAGE_PREFIX_ADMIN: z.ZodString;
    TMP_FILE_PATH: z.ZodString;
    CDN_PATH_URL: z.ZodString;
    CDN_MAIN_URL: z.ZodString;
    CDN_BASE_URL: z.ZodString;
    EMAIL_ADDRESS: z.ZodString;
    EMAIL_PASSWORD: z.ZodString;
    BLURHASH_COMPONENT_X: z.ZodNumber;
    BLURHASH_COMPONENT_Y: z.ZodNumber;
    MAX_CHILD_RESOURCE: z.ZodString;
}, "strip", z.ZodTypeAny, {
    DATABASE_URL?: string;
    NODE_ENV?: "PRODUCTION" | "DEVELOPMENT" | "LOCAL";
    APP_PORT?: number;
    JWT_SECRET?: string;
    DEVICE_JWT_SECRET?: string;
    OBJECT_STORAGE_HOST?: string;
    OBJECT_STORAGE_PORT?: string;
    OBJECT_STORAGE_REGION?: string;
    OBJECT_STORAGE_BUCKET?: string;
    OBJECT_STORAGE_ACCESS_KEY_ID?: string;
    OBJECT_STORAGE_SECRET_ACCESS_KEY?: string;
    OBJECT_STORAGE_FORCE_PATH_STYLE?: string;
    OBJECT_STORAGE_ENDPOINT?: string;
    DEFAULT_IMAGE_COMPRESSION_WIDTH?: number;
    DEFAULT_IMAGE_COMPRESSION_HEIGHT?: number;
    OBJECT_STORAGE_PREFIX_USER?: string;
    OBJECT_STORAGE_PREFIX_ADMIN?: string;
    TMP_FILE_PATH?: string;
    CDN_PATH_URL?: string;
    CDN_MAIN_URL?: string;
    CDN_BASE_URL?: string;
    EMAIL_ADDRESS?: string;
    EMAIL_PASSWORD?: string;
    BLURHASH_COMPONENT_X?: number;
    BLURHASH_COMPONENT_Y?: number;
    MAX_CHILD_RESOURCE?: string;
}, {
    DATABASE_URL?: string;
    NODE_ENV?: "PRODUCTION" | "DEVELOPMENT" | "LOCAL";
    APP_PORT?: number;
    JWT_SECRET?: string;
    DEVICE_JWT_SECRET?: string;
    OBJECT_STORAGE_HOST?: string;
    OBJECT_STORAGE_PORT?: string;
    OBJECT_STORAGE_REGION?: string;
    OBJECT_STORAGE_BUCKET?: string;
    OBJECT_STORAGE_ACCESS_KEY_ID?: string;
    OBJECT_STORAGE_SECRET_ACCESS_KEY?: string;
    OBJECT_STORAGE_FORCE_PATH_STYLE?: string;
    OBJECT_STORAGE_ENDPOINT?: string;
    DEFAULT_IMAGE_COMPRESSION_WIDTH?: number;
    DEFAULT_IMAGE_COMPRESSION_HEIGHT?: number;
    OBJECT_STORAGE_PREFIX_USER?: string;
    OBJECT_STORAGE_PREFIX_ADMIN?: string;
    TMP_FILE_PATH?: string;
    CDN_PATH_URL?: string;
    CDN_MAIN_URL?: string;
    CDN_BASE_URL?: string;
    EMAIL_ADDRESS?: string;
    EMAIL_PASSWORD?: string;
    BLURHASH_COMPONENT_X?: number;
    BLURHASH_COMPONENT_Y?: number;
    MAX_CHILD_RESOURCE?: string;
}>;
export type IXConfig = z.infer<typeof zEnvValidationSchema>;
export type Env = IXConfig;
export declare class XConfig {
    private readonly configService;
    env: Env;
    constructor(configService: ConfigService);
    static validate(env: unknown): {
        DATABASE_URL?: string;
        NODE_ENV?: "PRODUCTION" | "DEVELOPMENT" | "LOCAL";
        APP_PORT?: number;
        JWT_SECRET?: string;
        DEVICE_JWT_SECRET?: string;
        OBJECT_STORAGE_HOST?: string;
        OBJECT_STORAGE_PORT?: string;
        OBJECT_STORAGE_REGION?: string;
        OBJECT_STORAGE_BUCKET?: string;
        OBJECT_STORAGE_ACCESS_KEY_ID?: string;
        OBJECT_STORAGE_SECRET_ACCESS_KEY?: string;
        OBJECT_STORAGE_FORCE_PATH_STYLE?: string;
        OBJECT_STORAGE_ENDPOINT?: string;
        DEFAULT_IMAGE_COMPRESSION_WIDTH?: number;
        DEFAULT_IMAGE_COMPRESSION_HEIGHT?: number;
        OBJECT_STORAGE_PREFIX_USER?: string;
        OBJECT_STORAGE_PREFIX_ADMIN?: string;
        TMP_FILE_PATH?: string;
        CDN_PATH_URL?: string;
        CDN_MAIN_URL?: string;
        CDN_BASE_URL?: string;
        EMAIL_ADDRESS?: string;
        EMAIL_PASSWORD?: string;
        BLURHASH_COMPONENT_X?: number;
        BLURHASH_COMPONENT_Y?: number;
        MAX_CHILD_RESOURCE?: string;
    };
}
export {};
